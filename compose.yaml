services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - $PWD/logs:/opt/application/logs
    env_file:
      - .env
    environment:
      TZ: Asia/Shanghai
      NODE_ENV: production
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=api
      - TZ=Asia/Shanghai
    volumes:
      - $PWD/docker/db/:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d api"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - $PWD/docker/redis/data:/data
    command: /bin/sh -c 'redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    name: app-network
    driver: bridge
